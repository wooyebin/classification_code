import make_samples
import scikits_learn
import matplotlib.pyplot as plt
import MNN
import numpy as np
import tensorflow as tf
import config

FFT = config.FFT
ML_DATASET = config.ML_DATASET
ML_STORE = config.ML_STORE
ML_VIEW = config.ML_VIEW
ML_TEST = config.ML_TEST

loop = config.loop

# AUDIO FILE PATH
audio_file_paths_GG = config.audio_file_paths_GG
audio_file_paths_MB = config.audio_file_paths_MB
audio_file_paths_DG = config.audio_file_paths_DG

# DATA FILE
data_file_path_GG = "data/GG.txt"
data_file_path_MB = "data/MB.txt"
data_file_path_DG = "data/DG.txt"
data_file_paths = [data_file_path_GG, data_file_path_MB, data_file_path_DG]

# MAKE SAMPLES ( AUDIO -> DATA )
if FFT == 1:
    make_samples.make_samples(audio_file_paths_GG, data_file_path_GG)
    make_samples.make_samples(audio_file_paths_MB, data_file_path_MB)
    make_samples.make_samples(audio_file_paths_DG, data_file_path_DG)

# MAKE DATA SET
if ML_DATASET == 1:
    data, label = scikits_learn.make_data_set(data_file_paths, "012")

if ML_STORE == 1:
    slice_list = config.slice_list
    num_list = config.num_list
    freq = "%d_%d_%d_%d_%d_%d_%d_%d_%d" % (slice_list[0], slice_list[1], num_list[0], slice_list[2], slice_list[3], num_list[1], slice_list[4], slice_list[5], num_list[2])
    input_node = config.input_node
    node_num = config.node_num
    hidden_layer = config.hidden_layer
    output_node = config.output_node
    accuracy_list = []
    for i in range(loop):
        accuracy = MNN.MNN_keras(data, label, input_node, node_num, hidden_layer, output_node, freq)
        accuracy_list += [accuracy]
    print(accuracy_list)



if ML_TEST == 1:
    model = tf.keras.models.load_model('beekeeping_0_200_200_200_400_200_400_600_200_600_100x2_3.h5')
    xhat = np.array([[1.9380025387906699,3.2164497024412197,2.3926479651419155,4.544458215181344,2.7462578007461675,1.3871899406849584,2.2258119844155617,2.347853803760723,3.2412808208986315,1.5604879961958769,2.6415789791266673,0.7601389323273973,3.5873993226109198,3.2821166451544848,1.8656109917108803,3.878510417111858,1.5589982466473113,2.450651344229315,1.664527146471931,3.8907479229678605,2.942469029525715,3.738337346350478,3.1571386145014957,1.2971490218720365,3.636672593346908,2.0233345916889256,0.8278779104475985,11.699262246350502,5.447431948817015,2.912837076969763,9.880394210873733,4.041802395504042,4.051336786736771,10.005854110098714,12.344931202231978,6.077007469712589,12.822302054869725,21.966020321298693,4.862107975846007,15.20251165233016,26.385523679622448,8.797897223125807,10.596075049965394,15.329427276109397,10.54133744659229,18.54304416811783,17.22148067010426,19.577390997352133,44.67991160035022,49.35029723813324,49.36495259633811,72.29771479342253,65.18138980740352,33.66168048343244,59.84862525779893,36.60156709714568,37.48848390911644,39.37950208674834,20.60833815255358,38.50363889097485,4.470844226725603,23.695919285950428,35.7505588977647,25.6062490157194,26.33948472983652,34.52488710869241,33.33335390456123,14.338716348238519,27.652144928988967,10.472068188455454,25.53517886281694,31.36226173921396,19.509663460458235,25.242956047161886,54.2605432757396,18.928115902879778,12.540378062332374,47.68586339160044,68.49650024876874,61.73226285003218,243.99426181083257,279.99534366607793,96.89169556327778,95.69682961588603,100.48751537069178,25.995931510484684,27.301009700255687,37.84222109406173,16.68867218309666,16.826377297791144,28.159755507714582,13.443342388971294,16.28281428410213,5.2882915891953255,31.81349272527832,17.870796050709426,14.50611413505549,23.766361146137875,23.082217310116967,19.675482328872143,9.562602086583883,20.687932116875775,5.859911550245355,10.540027551596987,21.732881066525458,9.88998708214092,22.541021249983643,9.624262099785822,8.3944058432036,29.260146139190798,27.243455775177736,27.579579099524125,49.1184572838218,42.40406717700839,15.372054487631774,25.11558222425232,32.03907434092718,32.694177518675424,37.05954560603219,25.591704222063687,13.053255588513798,16.179734124608434,19.535796350507905,15.369815423047172,14.705686216585237,11.915951222373705,9.653949652298405,6.931857488771122,24.562368321079358,3.1110595556066714,7.674375059728678,18.51952028450625,16.17723126480574,11.642400512963942,13.191987926310778,2.4546077231707617,2.7726961395027123,6.3189838280947335,22.640658382527842,20.626959680993497,17.89413455412065,3.7995362911573647,24.489341199784974,33.10866006684122,29.640156950715724,24.827642227560535,14.820920426961454,15.093374055595257,18.082791724756312,34.306104179889935,13.722464742644982,13.729188351075592,42.41395558543644,54.67980885194949,33.529192579409916,72.59279903953788,107.49952553137226,104.3547337665349,124.39209214676767,239.9503053379378,350.80205237207815,1050.5793405760767,312.17817811729134,357.0463864208675,345.19789238265037,60.10952695345466,78.19837837302906,141.21035271689993,19.842250218707193,48.39043085436431,85.40765155360026,19.234600326869668,28.854488146003533,23.575535870326245,28.509117283957295,22.145562849467154,23.5765108423874,34.207033083720134,31.23965807069861,12.622061435665703,32.22479490040576,9.977742669215461,18.819058936049892,37.125747294566025,10.87151861403607,20.15291533520997,16.409775664475372,7.290392678342673,3.272062055118497,19.70577565375542,16.72056582965974,3.8760723477733787,14.17312471397808,19.674307457466373,21.399245434758317,8.163103725365584,13.168925245023084,7.977526977368752,8.435874785496885,10.098612129318013,4.341940369705969,2.8957918390665536,10.48131069539124,2.549649564660987,3.128963630697664,6.674891757923094,3.8759899977054366,8.908376400233262,5.300261942761201,9.185941837532194,11.44448456176816,8.229435606246149,14.96018325596677,6.305037565126319,15.549625439691013,9.569315556596035,12.486163425795203,4.274651565057208,9.811219833093103,4.2925920101683746,7.0296740709614625,9.177712343348478,8.964556861067063,10.140708852813182,16.845856453333923,24.747670483289532,27.05851669582039,17.688865341111615,9.975544406747867,8.238475851765763,22.33494127387537,13.088986625558167,35.69637723043731,26.909139040496093,29.769769860199254,26.242008807791958,48.80918373290956,9.115491480164556,23.8184027174988,61.08048807207985,131.96675342473503,218.69660806723104,166.20060567612856,176.16567981645224,76.50341917200117,91.44744878982895,47.51586518191207,64.07472810104923,16.136685910337043,28.7153762053027,26.736071137927212,13.989781366797777,13.788962062588743,30.881631518412796,11.320485148479696,13.609077612163297,41.79469551756574,8.423401186934425,6.716927612934041,7.272650996394608,10.830464376882613,2.9532678482362,5.023766689807003,2.8692525504172006,13.119657480673588,3.583090923083566,6.606557346704067,12.49573646032493,4.395566910565487,10.967164324121265,6.676004490759904,7.92811232560088,8.29914764970908,2.226145104192832,7.439262994504288,6.740698763213335,1.528534269642625,8.985302510942459,3.5331001589631534,6.447555674603521,8.635156709310433,3.4889142498191266,4.459786867495174,8.4013716037203,4.498538139911849,3.1798458845789264,4.341717838318447,6.801382236866692,7.4369654730527115,2.8384958813080066,3.6540018975442288,5.585338865150134,4.257193139052551,3.006844488308547,10.105483752665169,5.388089761864007,5.195114209812936,10.72488644908731,5.419253808276737,5.384163842944266,6.500462270483651,14.303123956531019,8.073618763590021,15.098041332912665,5.695368863565522,4.526415666229221,7.8266632621200225,5.554407951593677,13.090237365575264,18.77254831022877,0.7595691058529722,18.142546673431,12.756290933540395,16.804479858437407,6.3317224846894185,8.159554865490435,51.62295764940919,47.85656703112736,36.1455698863822,24.632880946315403,67.26934101078729,92.9869388223851,137.02012902425895,121.88288971668507,86.68645029840813,99.85205382627778,45.14604023048427,43.65873478103847,56.05840421364068,13.590224938039652,23.393949994683073,36.27953207092912,10.144519352211272,8.50565425667185,31.497276280857907,2.9392707341368944,9.82879580772941,20.885778407845947,13.081600704556886,16.634514780134317,6.480717784236961,8.994815125766488,6.400820350442063,11.314006177539765,6.1584006678416205,13.2962047135627,12.510608653713295,8.032940288650822,7.083106747155752,9.179195183957933,6.747043312061226,8.706908664544137,0.8080159682316639,11.11476154436186,5.03125005413182,1.3302944011426405,6.623873641043689,4.895396929655712,4.529169657574896,5.619212027811723,6.606532309968021,2.991254833012369,11.428863492122648,4.3881681734977125,1.744881085856264,7.350639335311789,5.356331413784836,7.389818755788474,6.85656206101804,3.5527431192218337,3.1958030802284974,1.8377399766612559,6.428100286052487,8.500726496481597,8.895834995710615,1.5339259452217209,10.959695300756527,3.714373149806399,8.201841323367109,10.483850367825248,6.944338629276793,5.898926737618414,9.13314457496494,6.507826245346599,6.647679678881319,7.782842963107099,4.2541673975254986,10.452993345001767,7.787096285725565,8.056378421959932,8.233957620918746,10.808571285155072,3.709528120787054,33.258738267368585,13.90240551749219,17.149034794322247,34.49145207399474,21.59853431608375,67.3971596182502,96.45115138663344,62.49786040966037,134.68210630333513,104.59689205801446,137.7624102916202,118.8133903270151,154.46306415106034,121.56993162288855,135.11288405255914,137.3816457006058,81.09193185581914,75.18562976829352,79.59002858907331,43.216900315719805,40.584419119642085,33.850004076125146,22.56002618079215,36.69908483865679,41.827740929393165,43.78690381087183,37.538997710769344,61.214035548474236,14.65026611151729,29.69300422440565,41.43716199639211,15.28152686202658,9.294711476254244,39.51746827797548,3.1625310398398088,18.38416970896543,35.845157181530475,8.421818985825784,22.9394401343978,9.574990068253546,3.194483885476787,21.849654325693876,4.0684024260383165,2.831651273755758,7.529885864754579,10.052528863280397,17.107893216195215,7.798131609505197,7.699958865827923,10.376415905378272,11.808772256813423,10.816865083645707,6.488022854587293,10.005848309970554,5.288201375233981,11.283845803152577,14.973158531774223,11.62657861803588,3.0890926627705215,6.215520648217515,11.373996130636648,5.415573067669216,10.976621785485895,1.4924835010919606,6.356228722688549,3.3930132721365593,6.384197400194572,4.733617155210562,8.122700243986616,13.987411551625891,9.996411654815322,0.5444070949557592,10.986278762154221,15.805281907082335,7.422962606714114,20.019226951308017,17.922712348426842,14.777418760655435,23.072554588856818,22.358835754937203,18.532335810169826,60.41575145803677,35.269552871153564,37.823370921136224,78.52903532907028,23.27880676073382,110.8610452418433,84.95997997114584,59.74606690940911,85.8198919940053,81.90105476861866,75.05658009863923,40.926319168778804,75.00112070130642,63.397841364471006,64.45995242007842,64.19455205383217,38.48910613317846,14.95566899850325,14.796639120661846,14.167065003082788,10.653838456064515,8.060158593487664,6.1192827505302185,3.1724547738515154,3.3840806780686092,8.319005346478045,10.427728978151523,5.492428226678683,5.778691552953149,5.742548455438356,3.9005058830487394,9.064320052587863,8.325729413905616,7.192752694127595,1.9125533980426082,2.0885657738130523,4.77039045159494,2.359770733538521,1.8582938317134263,1.1385120009886096,5.965904850282894,6.7508121529524585,3.776227595476856,3.006046115490528,2.839417385379854,3.0752630597848025,4.604003049899062,3.0022933231154103,2.0313790513093797,2.485052157670355,0.7374595406031996,1.7905106643249764,2.658368394887371,0.35594542519234756,4.254309982689772,1.483544174726082,5.7125331971360405,0.17247491458796324,3.490008699818193,4.552945320693304,0.43151224675579036,1.9792064374034555,3.248546372970784,6.9389959554912775,4.4905848835290465,1.7461471252129919,1.1137138601556174,1.1761696199536487,1.8625877263596653,1.2687233809888028,2.234104349230904,2.551232668927872,5.506529828460802,1.695540447621053,4.189248107575215,5.776073141699098,9.439902820292026,4.951984458543707,6.654387005370399,1.5649348447412557,2.6047132690907113,16.43372174594843,4.228588196910102,17.743437641870006,17.347603349829555,30.216541700271698,18.386203960246053,10.642856015315164,39.24839405576434,82.9769663182466,57.02170851216857,76.59237434233286,40.67553967299671,81.032966718132,42.24071572620257,40.9991149152427,63.56153098036472,18.27901451203832,43.627522857574846,64.95380191696051,27.47997165867559,61.083477978156324,47.421138307750105,44.85920492063619,32.36651281496843,3.994986776890849,27.365341378597254,9.079835964654352,10.283016634695585,24.37652971471361,32.26801093879527,15.319370511713641,24.46657202073718,11.963369870278592,12.21335373351511,20.050076506677687,9.644479504329967,17.246976668835597,16.41783425845698,11.107014147575672,12.506760008407344,10.169124789930281,7.277703987719101,4.915823560938693,10.370331493995655,6.615247277409961]])
    yhat = model.predict(xhat)
    print(np.argmax(yhat, axis=1))
'''
# MACHINE LEARNING RESULT TEST VIEW
f = open("ml list.txt", "w")
if ML_VIEW == 1:
    hidden_layer_list = [2, 4]
    node_num_list = [30, 100, 200, 300, 1000]
    avg_list = []
    min_list = []
    max_list = []
    for hidden_layer in hidden_layer_list:
        for node_num in node_num_list:
            accuracy_list = [0 for i in range(loop)]
            print("----------%dx%d----------" % (node_num, hidden_layer))
            print("----------%dx%d----------" % (node_num, hidden_layer), file=f)
            for i in range(loop):
                accuracy = MNN.MNN_keras(data, label, hidden_layer, node_num)
                accuracy_list[i] = accuracy
            for acc in accuracy_list:
                print(acc)
            print("avg : ", end="")
            print("avg : ", end="", file=f)
            print(sum(accuracy_list)/loop)
            print(sum(accuracy_list) / loop, file=f)
            avg_list += [sum(accuracy_list)/loop]
            print("min : ", end="")
            print("min : ", end="", file=f)
            print(min(accuracy_list))
            print(min(accuracy_list), file=f)
            print("max : ", end="")
            print("max : ", end="", file=f)
            print(max(accuracy_list))
            print(max(accuracy_list), file=f)
            min_list += [min(accuracy_list)]
            max_list += [max(accuracy_list)]

    l_n = ["30x2", "100x2", "200x2", "300x2", "1000x2",
           "30x4", "100x4", "200x4", "300x4", "1000x4"]
    y, min, max = avg_list, min_list, max_list
    for i in range(len(y) - 1, 0, -1):
        for j in range(i):
            if y[j] > y[j + 1]:
                y[j], y[j + 1] = y[j + 1], y[j]
                min[j], min[j + 1] = min[j + 1], min[j]
                max[j], max[j + 1] = max[j + 1], max[j]
                l_n[j], l_n[j + 1] = l_n[j + 1], l_n[j]
    t = open("sort.txt", "w")
    print(l_n, y, max, min, file=t)
    t.close()
    x = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
    plt.xticks(x, l_n)
    min_yerr = []
    max_yerr = []
    for i in range(10):
        min_yerr += [y[i] - min[i]]
        max_yerr += [max[i] - y[i]]
    plt.errorbar(x, y, yerr=[min_yerr, max_yerr])
    bar = plt.scatter(x, y, marker="h")
    for i in range(10):
        plt.text(x[i], min[i], str(min[i] * 1000 // 1 / 1000), fontsize=7)
        plt.text(x[i], max[i], str(max[i] * 1000 // 1 / 1000), fontsize=7)
        plt.text(x[i], y[i], str(y[i] * 1000 // 1 / 1000), fontsize=8)
        #plt.text(x[i], 1.1, l_n[i], fontsize=7)
    slice_list = config.slice_list
    num_list = config.num_list
    sec = config.sec
    plt.title("%ds %d~%d(%d), %d~%d(%d), %d~%d(%d) d%d m%d" % (sec, slice_list[0], slice_list[1], num_list[0], slice_list[2], slice_list[3], num_list[1], slice_list[4], slice_list[5], num_list[2], config.DROPOUT, config.DROPMIN))
    plt.savefig("%ds %d~%d(%d), %d~%d(%d), %d~%d(%d) d%d m%d.png" % (sec, slice_list[0], slice_list[1], num_list[0], slice_list[2], slice_list[3], num_list[1], slice_list[4], slice_list[5], num_list[2], config.DROPOUT, config.DROPMIN))
    f.close()
'''

